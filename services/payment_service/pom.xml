<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>payment-service</artifactId>
    <packaging>jar</packaging>
    <name>Payment Service</name>

    <parent>
        <groupId>org.example</groupId>
        <artifactId>cinema-reservation-system</artifactId>
        <version>1.0.0</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Dostosuj start-class do nowego modułu -->
        <start-class>org.example.payment_service.PaymentServiceApplication</start-class>
        <java.version>21</java.version>
        <!-- Możesz zadeklarować wersje zależności, ale jeśli BOM jest dziedziczony z głównego pom.xml, nie musisz tego robić -->
    </properties>

    <dependencies>
        <!-- Podstawowe zależności Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- Eureka Client – aby moduł rejestrował się w Discovery Service -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!-- Spring Boot Starter Actuator (opcjonalnie, przydatne do monitorowania) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- Jeśli planujesz korzystać z JPA (np. do zapisywania historii płatności), dodaj starter-data-jpa -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- H2 lub PostgreSQL w zależności od środowiska (dla testów możesz zacząć od H2) -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <!-- Opcjonalnie: Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.26</version>
            <scope>provided</scope>
        </dependency>
        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Plugin Spring Boot -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>org.example.payment_service.PaymentServiceApplication</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
